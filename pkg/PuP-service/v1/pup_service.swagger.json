{
  "swagger": "2.0",
  "info": {
    "title": "PuP-service/v1/pup_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "PupService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/AcceptOrder": {
      "post": {
        "operationId": "PupService_AcceptOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pup_serviceAcceptOrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pup_serviceAcceptOrderRequest"
            }
          }
        ],
        "tags": [
          "PupService"
        ]
      }
    },
    "/ListOrders": {
      "get": {
        "operationId": "PupService_ListOrders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pup_serviceListOrdersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "count",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "inPup",
            "in": "query",
            "required": true,
            "type": "boolean"
          }
        ],
        "tags": [
          "PupService"
        ]
      }
    },
    "/ListReturns": {
      "get": {
        "operationId": "PupService_ListReturns",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pup_serviceListReturnsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "PupService"
        ]
      }
    },
    "/PlaceOrder": {
      "patch": {
        "operationId": "PupService_PlaceOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pup_servicePlaceOrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pup_servicePlaceOrderRequest"
            }
          }
        ],
        "tags": [
          "PupService"
        ]
      }
    },
    "/RefundOrder": {
      "patch": {
        "operationId": "PupService_RefundOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pup_serviceRefundOrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pup_serviceRefundOrderRequest"
            }
          }
        ],
        "tags": [
          "PupService"
        ]
      }
    },
    "/ReturnOrder": {
      "patch": {
        "operationId": "PupService_ReturnOrder",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/pup_serviceReturnOrderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pup_serviceReturnOrderRequest"
            }
          }
        ],
        "tags": [
          "PupService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "pup_serviceAcceptOrderRequest": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string",
          "format": "uint64"
        },
        "userId": {
          "type": "string",
          "format": "uint64"
        },
        "keepUntilDate": {
          "type": "string",
          "format": "date-time"
        },
        "weight": {
          "type": "string",
          "format": "int64"
        },
        "price": {
          "type": "string",
          "format": "int64"
        },
        "packageType": {
          "type": "string"
        },
        "needWrapping": {
          "type": "boolean"
        }
      },
      "required": [
        "orderId",
        "userId",
        "keepUntilDate",
        "weight",
        "price",
        "packageType",
        "needWrapping"
      ]
    },
    "pup_serviceAcceptOrderResponse": {
      "type": "object"
    },
    "pup_serviceListOrdersResponse": {
      "type": "object",
      "properties": {
        "orders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pup_serviceOrderFromList"
          }
        }
      }
    },
    "pup_serviceListReturnsResponse": {
      "type": "object",
      "properties": {
        "returns": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/pup_serviceReturn"
          }
        }
      }
    },
    "pup_serviceOrderFromList": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "integer",
          "format": "int64"
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        },
        "state": {
          "type": "string"
        },
        "keepUntilDate": {
          "type": "string",
          "format": "date-time"
        },
        "price": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "pup_servicePlaceOrderRequest": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "required": [
        "orderId"
      ]
    },
    "pup_servicePlaceOrderResponse": {
      "type": "object"
    },
    "pup_serviceRefundOrderRequest": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "integer",
          "format": "int64"
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "orderId",
        "userId"
      ]
    },
    "pup_serviceRefundOrderResponse": {
      "type": "object"
    },
    "pup_serviceReturn": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "integer",
          "format": "int64"
        },
        "userId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "pup_serviceReturnOrderRequest": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "orderId"
      ]
    },
    "pup_serviceReturnOrderResponse": {
      "type": "object"
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: PuP-service/v1/pup_service.proto

package pup_service_v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PackageType int32

const (
	PackageType_PACKAGE_UNKNOWN PackageType = 0
	PackageType_BOX             PackageType = 1
	PackageType_BUNDLE          PackageType = 2
	PackageType_WRAP            PackageType = 3
)

// Enum value maps for PackageType.
var (
	PackageType_name = map[int32]string{
		0: "PACKAGE_UNKNOWN",
		1: "BOX",
		2: "BUNDLE",
		3: "WRAP",
	}
	PackageType_value = map[string]int32{
		"PACKAGE_UNKNOWN": 0,
		"BOX":             1,
		"BUNDLE":          2,
		"WRAP":            3,
	}
)

func (x PackageType) Enum() *PackageType {
	p := new(PackageType)
	*p = x
	return p
}

func (x PackageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PackageType) Descriptor() protoreflect.EnumDescriptor {
	return file_PuP_service_v1_pup_service_proto_enumTypes[0].Descriptor()
}

func (PackageType) Type() protoreflect.EnumType {
	return &file_PuP_service_v1_pup_service_proto_enumTypes[0]
}

func (x PackageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PackageType.Descriptor instead.
func (PackageType) EnumDescriptor() ([]byte, []int) {
	return file_PuP_service_v1_pup_service_proto_rawDescGZIP(), []int{0}
}

type AcceptOrderV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId       uint32                 `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	UserId        uint32                 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	KeepUntilDate *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=keep_until_date,json=keepUntilDate,proto3" json:"keep_until_date,omitempty"`
	Weight        int32                  `protobuf:"varint,7,opt,name=weight,proto3" json:"weight,omitempty"`
	Price         int32                  `protobuf:"varint,8,opt,name=price,proto3" json:"price,omitempty"`
	PackageType   PackageType            `protobuf:"varint,9,opt,name=package_type,json=packageType,proto3,enum=pup_service.v1.PackageType" json:"package_type,omitempty"`
	NeedWrapping  bool                   `protobuf:"varint,10,opt,name=need_wrapping,json=needWrapping,proto3" json:"need_wrapping,omitempty"`
}

func (x *AcceptOrderV1Request) Reset() {
	*x = AcceptOrderV1Request{}
	mi := &file_PuP_service_v1_pup_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptOrderV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptOrderV1Request) ProtoMessage() {}

func (x *AcceptOrderV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_PuP_service_v1_pup_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptOrderV1Request.ProtoReflect.Descriptor instead.
func (*AcceptOrderV1Request) Descriptor() ([]byte, []int) {
	return file_PuP_service_v1_pup_service_proto_rawDescGZIP(), []int{0}
}

func (x *AcceptOrderV1Request) GetOrderId() uint32 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *AcceptOrderV1Request) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AcceptOrderV1Request) GetKeepUntilDate() *timestamppb.Timestamp {
	if x != nil {
		return x.KeepUntilDate
	}
	return nil
}

func (x *AcceptOrderV1Request) GetWeight() int32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *AcceptOrderV1Request) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *AcceptOrderV1Request) GetPackageType() PackageType {
	if x != nil {
		return x.PackageType
	}
	return PackageType_PACKAGE_UNKNOWN
}

func (x *AcceptOrderV1Request) GetNeedWrapping() bool {
	if x != nil {
		return x.NeedWrapping
	}
	return false
}

type AcceptOrderV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AcceptOrderV1Response) Reset() {
	*x = AcceptOrderV1Response{}
	mi := &file_PuP_service_v1_pup_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AcceptOrderV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptOrderV1Response) ProtoMessage() {}

func (x *AcceptOrderV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_PuP_service_v1_pup_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptOrderV1Response.ProtoReflect.Descriptor instead.
func (*AcceptOrderV1Response) Descriptor() ([]byte, []int) {
	return file_PuP_service_v1_pup_service_proto_rawDescGZIP(), []int{1}
}

type PlaceOrderV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderIds []uint32 `protobuf:"varint,1,rep,packed,name=order_ids,json=orderIds,proto3" json:"order_ids,omitempty"`
}

func (x *PlaceOrderV1Request) Reset() {
	*x = PlaceOrderV1Request{}
	mi := &file_PuP_service_v1_pup_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlaceOrderV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceOrderV1Request) ProtoMessage() {}

func (x *PlaceOrderV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_PuP_service_v1_pup_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceOrderV1Request.ProtoReflect.Descriptor instead.
func (*PlaceOrderV1Request) Descriptor() ([]byte, []int) {
	return file_PuP_service_v1_pup_service_proto_rawDescGZIP(), []int{2}
}

func (x *PlaceOrderV1Request) GetOrderIds() []uint32 {
	if x != nil {
		return x.OrderIds
	}
	return nil
}

type PlaceOrderV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PlaceOrderV1Response) Reset() {
	*x = PlaceOrderV1Response{}
	mi := &file_PuP_service_v1_pup_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlaceOrderV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceOrderV1Response) ProtoMessage() {}

func (x *PlaceOrderV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_PuP_service_v1_pup_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceOrderV1Response.ProtoReflect.Descriptor instead.
func (*PlaceOrderV1Response) Descriptor() ([]byte, []int) {
	return file_PuP_service_v1_pup_service_proto_rawDescGZIP(), []int{3}
}

type ReturnOrderV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId uint32 `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *ReturnOrderV1Request) Reset() {
	*x = ReturnOrderV1Request{}
	mi := &file_PuP_service_v1_pup_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReturnOrderV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReturnOrderV1Request) ProtoMessage() {}

func (x *ReturnOrderV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_PuP_service_v1_pup_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReturnOrderV1Request.ProtoReflect.Descriptor instead.
func (*ReturnOrderV1Request) Descriptor() ([]byte, []int) {
	return file_PuP_service_v1_pup_service_proto_rawDescGZIP(), []int{4}
}

func (x *ReturnOrderV1Request) GetOrderId() uint32 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

type ReturnOrderV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReturnOrderV1Response) Reset() {
	*x = ReturnOrderV1Response{}
	mi := &file_PuP_service_v1_pup_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReturnOrderV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReturnOrderV1Response) ProtoMessage() {}

func (x *ReturnOrderV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_PuP_service_v1_pup_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReturnOrderV1Response.ProtoReflect.Descriptor instead.
func (*ReturnOrderV1Response) Descriptor() ([]byte, []int) {
	return file_PuP_service_v1_pup_service_proto_rawDescGZIP(), []int{5}
}

type ListOrdersV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Count  int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	InPup  bool   `protobuf:"varint,3,opt,name=in_pup,json=inPup,proto3" json:"in_pup,omitempty"`
}

func (x *ListOrdersV1Request) Reset() {
	*x = ListOrdersV1Request{}
	mi := &file_PuP_service_v1_pup_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOrdersV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrdersV1Request) ProtoMessage() {}

func (x *ListOrdersV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_PuP_service_v1_pup_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrdersV1Request.ProtoReflect.Descriptor instead.
func (*ListOrdersV1Request) Descriptor() ([]byte, []int) {
	return file_PuP_service_v1_pup_service_proto_rawDescGZIP(), []int{6}
}

func (x *ListOrdersV1Request) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListOrdersV1Request) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListOrdersV1Request) GetInPup() bool {
	if x != nil {
		return x.InPup
	}
	return false
}

type ListOrdersV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*OrderFromListV1 `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
}

func (x *ListOrdersV1Response) Reset() {
	*x = ListOrdersV1Response{}
	mi := &file_PuP_service_v1_pup_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOrdersV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOrdersV1Response) ProtoMessage() {}

func (x *ListOrdersV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_PuP_service_v1_pup_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOrdersV1Response.ProtoReflect.Descriptor instead.
func (*ListOrdersV1Response) Descriptor() ([]byte, []int) {
	return file_PuP_service_v1_pup_service_proto_rawDescGZIP(), []int{7}
}

func (x *ListOrdersV1Response) GetOrders() []*OrderFromListV1 {
	if x != nil {
		return x.Orders
	}
	return nil
}

type RefundOrderV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId uint32 `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	UserId  uint32 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *RefundOrderV1Request) Reset() {
	*x = RefundOrderV1Request{}
	mi := &file_PuP_service_v1_pup_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefundOrderV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundOrderV1Request) ProtoMessage() {}

func (x *RefundOrderV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_PuP_service_v1_pup_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundOrderV1Request.ProtoReflect.Descriptor instead.
func (*RefundOrderV1Request) Descriptor() ([]byte, []int) {
	return file_PuP_service_v1_pup_service_proto_rawDescGZIP(), []int{8}
}

func (x *RefundOrderV1Request) GetOrderId() uint32 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *RefundOrderV1Request) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type RefundOrderV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RefundOrderV1Response) Reset() {
	*x = RefundOrderV1Response{}
	mi := &file_PuP_service_v1_pup_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefundOrderV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefundOrderV1Response) ProtoMessage() {}

func (x *RefundOrderV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_PuP_service_v1_pup_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefundOrderV1Response.ProtoReflect.Descriptor instead.
func (*RefundOrderV1Response) Descriptor() ([]byte, []int) {
	return file_PuP_service_v1_pup_service_proto_rawDescGZIP(), []int{9}
}

type ListReturnsV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page  int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListReturnsV1Request) Reset() {
	*x = ListReturnsV1Request{}
	mi := &file_PuP_service_v1_pup_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListReturnsV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReturnsV1Request) ProtoMessage() {}

func (x *ListReturnsV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_PuP_service_v1_pup_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReturnsV1Request.ProtoReflect.Descriptor instead.
func (*ListReturnsV1Request) Descriptor() ([]byte, []int) {
	return file_PuP_service_v1_pup_service_proto_rawDescGZIP(), []int{10}
}

func (x *ListReturnsV1Request) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListReturnsV1Request) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type ListReturnsV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Returns []*ReturnV1 `protobuf:"bytes,1,rep,name=returns,proto3" json:"returns,omitempty"`
}

func (x *ListReturnsV1Response) Reset() {
	*x = ListReturnsV1Response{}
	mi := &file_PuP_service_v1_pup_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListReturnsV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReturnsV1Response) ProtoMessage() {}

func (x *ListReturnsV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_PuP_service_v1_pup_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReturnsV1Response.ProtoReflect.Descriptor instead.
func (*ListReturnsV1Response) Descriptor() ([]byte, []int) {
	return file_PuP_service_v1_pup_service_proto_rawDescGZIP(), []int{11}
}

func (x *ListReturnsV1Response) GetReturns() []*ReturnV1 {
	if x != nil {
		return x.Returns
	}
	return nil
}

type ReturnV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId uint32 `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	UserId  uint32 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ReturnV1) Reset() {
	*x = ReturnV1{}
	mi := &file_PuP_service_v1_pup_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReturnV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReturnV1) ProtoMessage() {}

func (x *ReturnV1) ProtoReflect() protoreflect.Message {
	mi := &file_PuP_service_v1_pup_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReturnV1.ProtoReflect.Descriptor instead.
func (*ReturnV1) Descriptor() ([]byte, []int) {
	return file_PuP_service_v1_pup_service_proto_rawDescGZIP(), []int{12}
}

func (x *ReturnV1) GetOrderId() uint32 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *ReturnV1) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type OrderFromListV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId       uint32                 `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	UserId        uint32                 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	State         string                 `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	KeepUntilDate *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=keep_until_date,json=keepUntilDate,proto3" json:"keep_until_date,omitempty"`
	Price         int32                  `protobuf:"varint,5,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *OrderFromListV1) Reset() {
	*x = OrderFromListV1{}
	mi := &file_PuP_service_v1_pup_service_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OrderFromListV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderFromListV1) ProtoMessage() {}

func (x *OrderFromListV1) ProtoReflect() protoreflect.Message {
	mi := &file_PuP_service_v1_pup_service_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderFromListV1.ProtoReflect.Descriptor instead.
func (*OrderFromListV1) Descriptor() ([]byte, []int) {
	return file_PuP_service_v1_pup_service_proto_rawDescGZIP(), []int{13}
}

func (x *OrderFromListV1) GetOrderId() uint32 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderFromListV1) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *OrderFromListV1) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *OrderFromListV1) GetKeepUntilDate() *timestamppb.Timestamp {
	if x != nil {
		return x.KeepUntilDate
	}
	return nil
}

func (x *OrderFromListV1) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

var File_PuP_service_v1_pup_service_proto protoreflect.FileDescriptor

var file_PuP_service_v1_pup_service_proto_rawDesc = []byte{
	0x0a, 0x20, 0x50, 0x75, 0x50, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x75, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0e, 0x70, 0x75, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe0, 0x02, 0x0a, 0x14,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x56, 0x31, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x2a, 0x02,
	0x20, 0x00, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x0a, 0xe0, 0x41,
	0x02, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x47, 0x0a, 0x0f, 0x6b, 0x65, 0x65, 0x70, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0d, 0x6b, 0x65, 0x65, 0x70,
	0x55, 0x6e, 0x74, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x20, 0x0a,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xe0, 0x41,
	0x02, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x43, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x70, 0x75, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x0d, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x77, 0x72, 0x61,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x42, 0x03, 0xe0, 0x41, 0x02,
	0x52, 0x0c, 0x6e, 0x65, 0x65, 0x64, 0x57, 0x72, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x22, 0x17,
	0x0a, 0x15, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x56, 0x31, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x41, 0x0a, 0x13, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a,
	0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0d, 0x42, 0x0d, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x07, 0x92, 0x01, 0x04, 0x08, 0x01, 0x18, 0x01,
	0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x50, 0x6c,
	0x61, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x3d, 0x0a, 0x14, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x08, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x0a, 0xe0, 0x41,
	0x02, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x17, 0x0a, 0x15, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x78, 0x0a, 0x13, 0x4c, 0x69,
	0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x1a, 0x02, 0x28,
	0x00, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x06, 0x69, 0x6e, 0x5f, 0x70,
	0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x05, 0x69,
	0x6e, 0x50, 0x75, 0x70, 0x22, 0x4f, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70,
	0x75, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x31, 0x52, 0x06, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0x62, 0x0a, 0x14, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x42,
	0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20, 0x00, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42, 0x04, 0x2a, 0x02, 0x20,
	0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x58, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x73, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa, 0x42,
	0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xe0, 0x41, 0x02, 0xfa,
	0x42, 0x04, 0x1a, 0x02, 0x20, 0x00, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x4b, 0x0a, 0x15,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x56, 0x31, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x75, 0x70, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x56, 0x31,
	0x52, 0x07, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x22, 0x3e, 0x0a, 0x08, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x56, 0x31, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xb5, 0x01, 0x0a, 0x0f, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x31, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x42, 0x0a, 0x0f, 0x6b, 0x65, 0x65, 0x70, 0x5f,
	0x75, 0x6e, 0x74, 0x69, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6b, 0x65,
	0x65, 0x70, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x2a, 0x41, 0x0a, 0x0b, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x13, 0x0a, 0x0f, 0x50, 0x41, 0x43, 0x4b, 0x41, 0x47, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x4f, 0x58, 0x10, 0x01, 0x12, 0x0a,
	0x0a, 0x06, 0x42, 0x55, 0x4e, 0x44, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x52,
	0x41, 0x50, 0x10, 0x03, 0x32, 0xc2, 0x10, 0x0a, 0x0a, 0x50, 0x75, 0x70, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0xf1, 0x02, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x56, 0x31, 0x12, 0x24, 0x2e, 0x70, 0x75, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x75,
	0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x92, 0x02, 0x92, 0x41, 0xf4, 0x01, 0x12, 0x1e, 0xd0, 0x9f, 0xd1, 0x80, 0xd0,
	0xb8, 0xd0, 0xbd, 0xd1, 0x8f, 0xd1, 0x82, 0xd1, 0x8c, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xba,
	0xd0, 0xb0, 0xd0, 0xb7, 0x20, 0x28, 0x76, 0x31, 0x29, 0x1a, 0xd1, 0x01, 0xd0, 0x9f, 0xd1, 0x80,
	0xd0, 0xb8, 0xd0, 0xbd, 0xd0, 0xb8, 0xd0, 0xbc, 0xd0, 0xb0, 0xd0, 0xb5, 0xd1, 0x82, 0x20, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x20, 0x49, 0x64, 0x2c, 0x20, 0x55, 0x73, 0x65, 0x72, 0x20, 0x49, 0x64,
	0x2c, 0x20, 0xd0, 0x94, 0xd0, 0xb0, 0xd1, 0x82, 0xd1, 0x83, 0x20, 0xd1, 0x85, 0xd1, 0x80, 0xd0,
	0xb0, 0xd0, 0xbd, 0xd0, 0xb5, 0xd0, 0xbd, 0xd0, 0xb8, 0xd1, 0x8f, 0x2c, 0x20, 0xd0, 0x92, 0xd0,
	0xb5, 0xd1, 0x81, 0x2c, 0x20, 0xd0, 0xa6, 0xd0, 0xb5, 0xd0, 0xbd, 0xd1, 0x83, 0x2c, 0x20, 0xd0,
	0xa2, 0xd0, 0xb8, 0xd0, 0xbf, 0x20, 0xd1, 0x83, 0xd0, 0xbf, 0xd0, 0xb0, 0xd0, 0xba, 0xd0, 0xbe,
	0xd0, 0xb2, 0xd0, 0xba, 0xd0, 0xb8, 0x20, 0xd0, 0xb8, 0x20, 0xd0, 0xbd, 0xd0, 0xb5, 0xd0, 0xbe,
	0xd0, 0xb1, 0xd1, 0x85, 0xd0, 0xbe, 0xd0, 0xb4, 0xd0, 0xb8, 0xd0, 0xbc, 0xd0, 0xbe, 0xd1, 0x81,
	0xd1, 0x82, 0xd1, 0x8c, 0x20, 0xd1, 0x83, 0xd0, 0xbf, 0xd0, 0xb0, 0xd0, 0xba, 0xd0, 0xbe, 0xd0,
	0xb2, 0xd0, 0xba, 0xd0, 0xb8, 0x20, 0xd0, 0xbe, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xba, 0xd0,
	0xb0, 0xd0, 0xb7, 0xd0, 0xb5, 0x20, 0xd0, 0xb8, 0x20, 0xd1, 0x81, 0xd0, 0xbe, 0xd0, 0xb7, 0xd0,
	0xb4, 0xd0, 0xb0, 0xd0, 0xb5, 0xd1, 0x82, 0x20, 0xd0, 0xbd, 0xd0, 0xbe, 0xd0, 0xb2, 0xd1, 0x8b,
	0xd0, 0xb9, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xba, 0xd0, 0xb0, 0xd0, 0xb7, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a, 0x22, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x41, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0xc6, 0x02, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x63,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x56, 0x31, 0x12, 0x23, 0x2e, 0x70, 0x75, 0x70, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x70, 0x75, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6c, 0x61, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xea, 0x01, 0x92, 0x41, 0xcd, 0x01, 0x12, 0x22, 0xd0, 0x94, 0xd0, 0xbe,
	0xd1, 0x81, 0xd1, 0x82, 0xd0, 0xb0, 0xd0, 0xb2, 0xd0, 0xb8, 0xd1, 0x82, 0xd1, 0x8c, 0x20, 0xd0,
	0xb7, 0xd0, 0xb0, 0xd0, 0xba, 0xd0, 0xb0, 0xd0, 0xb7, 0x20, 0x28, 0x76, 0x31, 0x29, 0x1a, 0xa6,
	0x01, 0xd0, 0x9f, 0xd1, 0x80, 0xd0, 0xb8, 0xd0, 0xbd, 0xd0, 0xb8, 0xd0, 0xbc, 0xd0, 0xb0, 0xd0,
	0xb5, 0xd1, 0x82, 0x20, 0xd0, 0xbd, 0xd0, 0xb0, 0x20, 0xd0, 0xb2, 0xd1, 0x85, 0xd0, 0xbe, 0xd0,
	0xb4, 0x20, 0xd0, 0xbc, 0xd0, 0xbd, 0xd0, 0xbe, 0xd0, 0xb6, 0xd0, 0xb5, 0xd1, 0x81, 0xd1, 0x82,
	0xd0, 0xb2, 0xd0, 0xbe, 0x20, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x20, 0x49, 0x44, 0x2c, 0x20, 0xd0,
	0xbd, 0xd0, 0xb5, 0xd0, 0xbe, 0xd0, 0xb1, 0xd1, 0x85, 0xd0, 0xbe, 0xd0, 0xb4, 0xd0, 0xb8, 0xd0,
	0xbc, 0xd0, 0xbe, 0x20, 0xd1, 0x87, 0xd1, 0x82, 0xd0, 0xbe, 0xd0, 0xb1, 0xd1, 0x8b, 0x20, 0xd0,
	0xb2, 0xd1, 0x81, 0xd0, 0xb5, 0x20, 0x49, 0x44, 0x20, 0xd0, 0xbf, 0xd1, 0x80, 0xd0, 0xb8, 0xd0,
	0xbd, 0xd0, 0xb0, 0xd0, 0xb4, 0xd0, 0xbb, 0xd0, 0xb5, 0xd0, 0xb6, 0xd0, 0xb0, 0xd0, 0xbb, 0xd0,
	0xb8, 0x20, 0xd0, 0xbe, 0xd0, 0xb4, 0xd0, 0xbd, 0xd0, 0xbe, 0xd0, 0xbc, 0xd1, 0x83, 0x20, 0xd0,
	0xbf, 0xd0, 0xbe, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xb7, 0xd0, 0xbe, 0xd0, 0xb2, 0xd0, 0xb0, 0xd1,
	0x82, 0xd0, 0xb5, 0xd0, 0xbb, 0xd1, 0x8e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x3a, 0x01, 0x2a,
	0x32, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x89, 0x02, 0x0a, 0x0d, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x56, 0x31, 0x12, 0x24, 0x2e, 0x70, 0x75, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x56,
	0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x75, 0x70, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xaa, 0x01, 0x92, 0x41, 0x8c, 0x01, 0x12, 0x2d, 0xd0, 0x92, 0xd0, 0xb5, 0xd1, 0x80, 0xd0, 0xbd,
	0xd1, 0x83, 0xd1, 0x82, 0xd1, 0x8c, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xba, 0xd0, 0xb0, 0xd0,
	0xb7, 0x20, 0xd0, 0xba, 0xd1, 0x83, 0xd1, 0x80, 0xd1, 0x8c, 0xd0, 0xb5, 0xd1, 0x80, 0xd1, 0x83,
	0x20, 0x28, 0x76, 0x31, 0x29, 0x1a, 0x5b, 0xd0, 0x9f, 0xd1, 0x80, 0xd0, 0xb8, 0xd0, 0xbd, 0xd0,
	0xb8, 0xd0, 0xbc, 0xd0, 0xb0, 0xd0, 0xb5, 0xd1, 0x82, 0x20, 0xd0, 0xbd, 0xd0, 0xb0, 0x20, 0xd0,
	0xb2, 0xd1, 0x85, 0xd0, 0xbe, 0xd0, 0xb4, 0x20, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x20, 0x49, 0x44,
	0x20, 0xd0, 0xb8, 0x20, 0xd0, 0xb2, 0xd0, 0xbe, 0xd0, 0xb7, 0xd0, 0xb2, 0xd1, 0x80, 0xd0, 0xb0,
	0xd1, 0x89, 0xd0, 0xb0, 0xd0, 0xb5, 0xd1, 0x82, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xba, 0xd0,
	0xb0, 0xd0, 0xb7, 0x20, 0xd0, 0xba, 0xd1, 0x83, 0xd1, 0x80, 0xd1, 0x8c, 0xd0, 0xb5, 0xd1, 0x80,
	0xd1, 0x83, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a, 0x32, 0x0f, 0x2f, 0x76, 0x31,
	0x2f, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0xb8, 0x04, 0x0a,
	0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x56, 0x31, 0x12, 0x23, 0x2e,
	0x70, 0x75, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x75, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x56, 0x31,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xdc, 0x03, 0x92, 0x41, 0xc2, 0x03, 0x12,
	0x20, 0xd0, 0xa1, 0xd0, 0xbf, 0xd0, 0xb8, 0xd1, 0x81, 0xd0, 0xbe, 0xd0, 0xba, 0x20, 0xd0, 0xb7,
	0xd0, 0xb0, 0xd0, 0xba, 0xd0, 0xb0, 0xd0, 0xb7, 0xd0, 0xbe, 0xd0, 0xb2, 0x20, 0x28, 0x76, 0x31,
	0x29, 0x1a, 0x9d, 0x03, 0xd0, 0x9f, 0xd1, 0x80, 0xd0, 0xb8, 0xd0, 0xbd, 0xd0, 0xb8, 0xd0, 0xbc,
	0xd0, 0xb0, 0xd0, 0xb5, 0xd1, 0x82, 0x20, 0xd0, 0xbd, 0xd0, 0xb0, 0x20, 0xd0, 0xb2, 0xd1, 0x85,
	0xd0, 0xbe, 0xd0, 0xb4, 0x20, 0x55, 0x73, 0x65, 0x72, 0x20, 0x49, 0x44, 0x20, 0xd0, 0xb8, 0x20,
	0xd0, 0xb4, 0xd0, 0xb2, 0xd0, 0xb0, 0x20, 0xd0, 0xbe, 0xd0, 0xbf, 0xd1, 0x86, 0xd0, 0xb8, 0xd0,
	0xbe, 0xd0, 0xbd, 0xd0, 0xb0, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xbd, 0xd1, 0x8b, 0xd1, 0x85, 0x20,
	0xd0, 0xbf, 0xd0, 0xb0, 0xd1, 0x80, 0xd0, 0xb0, 0xd0, 0xbc, 0xd0, 0xb5, 0xd1, 0x82, 0xd1, 0x80,
	0xd0, 0xb0, 0x3a, 0x0a, 0x31, 0x20, 0x2d, 0x20, 0xd0, 0x9a, 0xd0, 0xbe, 0xd0, 0xbb, 0xd0, 0xb8,
	0xd1, 0x87, 0xd0, 0xb5, 0xd1, 0x81, 0xd1, 0x82, 0xd0, 0xb2, 0xd0, 0xbe, 0x20, 0xd0, 0xb7, 0xd0,
	0xb0, 0xd0, 0xba, 0xd0, 0xb0, 0xd0, 0xb7, 0xd0, 0xbe, 0xd0, 0xb2, 0x2e, 0x20, 0xd0, 0x9f, 0xd0,
	0xb5, 0xd1, 0x80, 0xd0, 0xb5, 0xd0, 0xb4, 0xd0, 0xb0, 0xd0, 0xb5, 0xd1, 0x82, 0xd1, 0x81, 0xd1,
	0x8f, 0x20, 0xd0, 0xb2, 0x20, 0xd1, 0x81, 0xd0, 0xbb, 0xd1, 0x83, 0xd1, 0x87, 0xd0, 0xb0, 0xd0,
	0xb5, 0x20, 0xd0, 0xb5, 0xd1, 0x81, 0xd0, 0xbb, 0xd0, 0xb8, 0x20, 0xd0, 0xbd, 0xd1, 0x83, 0xd0,
	0xb6, 0xd0, 0xbd, 0xd0, 0xbe, 0x20, 0xd0, 0xbf, 0xd0, 0xbe, 0xd0, 0xba, 0xd0, 0xb0, 0xd0, 0xb7,
	0xd0, 0xb0, 0xd1, 0x82, 0xd1, 0x8c, 0x20, 0x6e, 0x20, 0xd0, 0xbf, 0xd0, 0xbe, 0xd1, 0x81, 0xd0,
	0xbb, 0xd0, 0xb5, 0xd0, 0xb4, 0xd0, 0xbd, 0xd0, 0xb8, 0xd1, 0x85, 0x20, 0xd0, 0xb2, 0xd1, 0x81,
	0xd0, 0xb5, 0xd0, 0xb2, 0xd0, 0xbe, 0xd0, 0xb7, 0xd0, 0xbc, 0xd0, 0xbe, 0xd0, 0xb6, 0xd0, 0xbd,
	0xd1, 0x8b, 0xd1, 0x85, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xba, 0xd0, 0xb0, 0xd0, 0xb7, 0xd0,
	0xbe, 0xd0, 0xb2, 0x0a, 0x32, 0x20, 0x2d, 0x20, 0x69, 0x6e, 0x50, 0x75, 0x50, 0x2e, 0x20, 0xd0,
	0x9f, 0xd0, 0xb5, 0xd1, 0x80, 0xd0, 0xb5, 0xd0, 0xb4, 0xd0, 0xb0, 0xd0, 0xb5, 0xd1, 0x82, 0xd1,
	0x81, 0xd1, 0x8f, 0x20, 0xd0, 0xb2, 0x20, 0xd1, 0x81, 0xd0, 0xbb, 0xd1, 0x83, 0xd1, 0x87, 0xd0,
	0xb0, 0xd0, 0xb5, 0x20, 0xd0, 0xb5, 0xd1, 0x81, 0xd0, 0xbb, 0xd0, 0xb8, 0x20, 0xd0, 0xbd, 0xd1,
	0x83, 0xd0, 0xb6, 0xd0, 0xbd, 0xd0, 0xbe, 0x20, 0xd0, 0xbf, 0xd0, 0xbe, 0xd0, 0xba, 0xd0, 0xb0,
	0xd0, 0xb7, 0xd0, 0xb0, 0xd1, 0x82, 0xd1, 0x8c, 0x20, 0xd0, 0x92, 0xd0, 0xa1, 0xd0, 0x95, 0x20,
	0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xba, 0xd0, 0xb0, 0xd0, 0xb7, 0xd1, 0x8b, 0x2c, 0x20, 0xd0, 0xbd,
	0xd0, 0xb0, 0xd1, 0x85, 0xd0, 0xbe, 0xd0, 0xb4, 0xd1, 0x8f, 0xd1, 0x89, 0xd0, 0xb8, 0xd0, 0xb5,
	0xd1, 0x81, 0xd1, 0x8f, 0x20, 0xd0, 0xbd, 0xd0, 0xb0, 0x20, 0xd0, 0x9f, 0xd0, 0x92, 0xd0, 0x97,
	0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x4c, 0x69, 0x73,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x80, 0x02, 0x0a, 0x0d, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x56, 0x31, 0x12, 0x24, 0x2e, 0x70, 0x75, 0x70, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x70, 0x75, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x56, 0x31, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa1, 0x01, 0x92, 0x41, 0x83, 0x01, 0x12, 0x20, 0xd0,
	0x92, 0xd0, 0xbe, 0xd0, 0xb7, 0xd0, 0xb2, 0xd1, 0x80, 0xd0, 0xb0, 0xd1, 0x82, 0x20, 0xd0, 0xb7,
	0xd0, 0xb0, 0xd0, 0xba, 0xd0, 0xb0, 0xd0, 0xb7, 0xd0, 0xb0, 0x20, 0x28, 0x76, 0x31, 0x29, 0x1a,
	0x5f, 0xd0, 0x9f, 0xd1, 0x80, 0xd0, 0xb8, 0xd0, 0xbd, 0xd0, 0xb8, 0xd0, 0xbc, 0xd0, 0xb0, 0xd0,
	0xb5, 0xd1, 0x82, 0x20, 0xd0, 0xbd, 0xd0, 0xb0, 0x20, 0xd0, 0xb2, 0xd1, 0x85, 0xd0, 0xbe, 0xd0,
	0xb4, 0x20, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x20, 0xd0, 0xb8, 0x20, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x2e, 0x20, 0xd0, 0x92, 0xd0, 0xbe, 0xd0, 0xb7, 0xd0, 0xb2, 0xd1, 0x80, 0xd0,
	0xb0, 0xd1, 0x89, 0xd0, 0xb0, 0xd0, 0xb5, 0xd1, 0x82, 0x20, 0xd0, 0xb7, 0xd0, 0xb0, 0xd0, 0xba,
	0xd0, 0xb0, 0xd0, 0xb7, 0x20, 0xd0, 0xbd, 0xd0, 0xb0, 0x20, 0xd0, 0x9f, 0xd0, 0x92, 0xd0, 0x97,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a, 0x32, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0xac, 0x02, 0x0a, 0x0d, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x56, 0x31, 0x12, 0x24, 0x2e, 0x70,
	0x75, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x70, 0x75, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x56,
	0x31, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xcd, 0x01, 0x92, 0x41, 0xb2, 0x01,
	0x12, 0x24, 0xd0, 0xa1, 0xd0, 0xbf, 0xd0, 0xb8, 0xd1, 0x81, 0xd0, 0xbe, 0xd0, 0xba, 0x20, 0xd0,
	0xb2, 0xd0, 0xbe, 0xd0, 0xb7, 0xd0, 0xb2, 0xd1, 0x80, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xbe, 0xd0,
	0xb2, 0x20, 0x28, 0x76, 0x31, 0x29, 0x1a, 0x89, 0x01, 0xd0, 0x9f, 0xd0, 0xb5, 0xd1, 0x80, 0xd0,
	0xb5, 0xd0, 0xb4, 0xd0, 0xb0, 0xd0, 0xb5, 0xd1, 0x82, 0xd1, 0x81, 0xd1, 0x8f, 0x20, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x20, 0xd0, 0xb8, 0x20, 0x70, 0x61, 0x67, 0x65, 0x20, 0xd0, 0xb4, 0xd0, 0xbb,
	0xd1, 0x8f, 0x20, 0xd0, 0xbf, 0xd0, 0xb0, 0xd0, 0xb3, 0xd0, 0xb8, 0xd0, 0xbd, 0xd0, 0xb0, 0xd1,
	0x86, 0xd0, 0xb8, 0xd0, 0xb8, 0x2e, 0xd0, 0x9f, 0xd0, 0xbe, 0xd0, 0xba, 0xd0, 0xb0, 0xd0, 0xb7,
	0xd1, 0x8b, 0xd0, 0xb2, 0xd0, 0xb0, 0xd0, 0xb5, 0xd1, 0x82, 0x20, 0xd0, 0xb2, 0xd1, 0x81, 0xd0,
	0xb5, 0x20, 0xd0, 0xb2, 0xd0, 0xbe, 0xd0, 0xb7, 0xd0, 0xb2, 0xd1, 0x80, 0xd0, 0xb0, 0xd1, 0x82,
	0xd1, 0x8b, 0x20, 0xd0, 0xbe, 0xd1, 0x82, 0x20, 0xd0, 0xba, 0xd0, 0xbb, 0xd0, 0xb8, 0xd0, 0xb5,
	0xd0, 0xbd, 0xd1, 0x82, 0xd0, 0xb0, 0x20, 0xd0, 0xbd, 0xd0, 0xb0, 0x20, 0xd0, 0x9f, 0xd0, 0x92,
	0xd0, 0x97, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x42, 0xf8, 0x01, 0x92, 0x41, 0xc8, 0x01,
	0x12, 0x8e, 0x01, 0x0a, 0x06, 0xd0, 0x9f, 0xd0, 0x92, 0xd0, 0x97, 0x12, 0x7d, 0xd0, 0xa1, 0xd0,
	0xb5, 0xd1, 0x80, 0xd0, 0xb2, 0xd0, 0xb8, 0xd1, 0x81, 0x20, 0xd0, 0xb2, 0xd1, 0x8b, 0xd0, 0xbf,
	0xd0, 0xbe, 0xd0, 0xbb, 0xd0, 0xbd, 0xd1, 0x8f, 0xd0, 0xb5, 0xd1, 0x82, 0x20, 0xd1, 0x84, 0xd1,
	0x83, 0xd0, 0xbd, 0xd0, 0xba, 0xd1, 0x86, 0xd0, 0xb8, 0xd0, 0xb8, 0x20, 0xd0, 0x9f, 0xd0, 0x92,
	0xd0, 0x97, 0x20, 0xd0, 0xb8, 0x20, 0xd0, 0xb4, 0xd0, 0xbe, 0xd1, 0x81, 0xd1, 0x82, 0xd0, 0xb0,
	0xd0, 0xb2, 0xd0, 0xba, 0xd0, 0xb8, 0xd0, 0xb4, 0xd0, 0xbb, 0xd1, 0x8f, 0x20, 0xd0, 0xbc, 0xd0,
	0xbd, 0xd0, 0xbe, 0xd0, 0xb6, 0xd0, 0xb5, 0xd1, 0x81, 0xd1, 0x82, 0xd0, 0xb2, 0xd0, 0xb0, 0x20,
	0xd0, 0xbf, 0xd0, 0xbe, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xb7, 0xd0, 0xbe, 0xd0, 0xb2, 0xd0, 0xb0,
	0xd1, 0x82, 0xd0, 0xb5, 0xd0, 0xbb, 0xd0, 0xb5, 0xd0, 0xb9, 0x32, 0x05, 0x31, 0x2e, 0x30, 0x2e,
	0x30, 0x1a, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x68, 0x6f, 0x73, 0x74, 0x3a, 0x37, 0x30, 0x30,
	0x31, 0x2a, 0x01, 0x01, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x5a, 0x2a, 0x68, 0x6f, 0x6d, 0x65, 0x77, 0x6f,
	0x72, 0x6b, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x75, 0x70, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x75, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_PuP_service_v1_pup_service_proto_rawDescOnce sync.Once
	file_PuP_service_v1_pup_service_proto_rawDescData = file_PuP_service_v1_pup_service_proto_rawDesc
)

func file_PuP_service_v1_pup_service_proto_rawDescGZIP() []byte {
	file_PuP_service_v1_pup_service_proto_rawDescOnce.Do(func() {
		file_PuP_service_v1_pup_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_PuP_service_v1_pup_service_proto_rawDescData)
	})
	return file_PuP_service_v1_pup_service_proto_rawDescData
}

var file_PuP_service_v1_pup_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_PuP_service_v1_pup_service_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_PuP_service_v1_pup_service_proto_goTypes = []any{
	(PackageType)(0),              // 0: pup_service.v1.PackageType
	(*AcceptOrderV1Request)(nil),  // 1: pup_service.v1.AcceptOrderV1Request
	(*AcceptOrderV1Response)(nil), // 2: pup_service.v1.AcceptOrderV1Response
	(*PlaceOrderV1Request)(nil),   // 3: pup_service.v1.PlaceOrderV1Request
	(*PlaceOrderV1Response)(nil),  // 4: pup_service.v1.PlaceOrderV1Response
	(*ReturnOrderV1Request)(nil),  // 5: pup_service.v1.ReturnOrderV1Request
	(*ReturnOrderV1Response)(nil), // 6: pup_service.v1.ReturnOrderV1Response
	(*ListOrdersV1Request)(nil),   // 7: pup_service.v1.ListOrdersV1Request
	(*ListOrdersV1Response)(nil),  // 8: pup_service.v1.ListOrdersV1Response
	(*RefundOrderV1Request)(nil),  // 9: pup_service.v1.RefundOrderV1Request
	(*RefundOrderV1Response)(nil), // 10: pup_service.v1.RefundOrderV1Response
	(*ListReturnsV1Request)(nil),  // 11: pup_service.v1.ListReturnsV1Request
	(*ListReturnsV1Response)(nil), // 12: pup_service.v1.ListReturnsV1Response
	(*ReturnV1)(nil),              // 13: pup_service.v1.ReturnV1
	(*OrderFromListV1)(nil),       // 14: pup_service.v1.OrderFromListV1
	(*timestamppb.Timestamp)(nil), // 15: google.protobuf.Timestamp
}
var file_PuP_service_v1_pup_service_proto_depIdxs = []int32{
	15, // 0: pup_service.v1.AcceptOrderV1Request.keep_until_date:type_name -> google.protobuf.Timestamp
	0,  // 1: pup_service.v1.AcceptOrderV1Request.package_type:type_name -> pup_service.v1.PackageType
	14, // 2: pup_service.v1.ListOrdersV1Response.orders:type_name -> pup_service.v1.OrderFromListV1
	13, // 3: pup_service.v1.ListReturnsV1Response.returns:type_name -> pup_service.v1.ReturnV1
	15, // 4: pup_service.v1.OrderFromListV1.keep_until_date:type_name -> google.protobuf.Timestamp
	1,  // 5: pup_service.v1.PupService.AcceptOrderV1:input_type -> pup_service.v1.AcceptOrderV1Request
	3,  // 6: pup_service.v1.PupService.PlaceOrderV1:input_type -> pup_service.v1.PlaceOrderV1Request
	5,  // 7: pup_service.v1.PupService.ReturnOrderV1:input_type -> pup_service.v1.ReturnOrderV1Request
	7,  // 8: pup_service.v1.PupService.ListOrdersV1:input_type -> pup_service.v1.ListOrdersV1Request
	9,  // 9: pup_service.v1.PupService.RefundOrderV1:input_type -> pup_service.v1.RefundOrderV1Request
	11, // 10: pup_service.v1.PupService.ListReturnsV1:input_type -> pup_service.v1.ListReturnsV1Request
	2,  // 11: pup_service.v1.PupService.AcceptOrderV1:output_type -> pup_service.v1.AcceptOrderV1Response
	4,  // 12: pup_service.v1.PupService.PlaceOrderV1:output_type -> pup_service.v1.PlaceOrderV1Response
	6,  // 13: pup_service.v1.PupService.ReturnOrderV1:output_type -> pup_service.v1.ReturnOrderV1Response
	8,  // 14: pup_service.v1.PupService.ListOrdersV1:output_type -> pup_service.v1.ListOrdersV1Response
	10, // 15: pup_service.v1.PupService.RefundOrderV1:output_type -> pup_service.v1.RefundOrderV1Response
	12, // 16: pup_service.v1.PupService.ListReturnsV1:output_type -> pup_service.v1.ListReturnsV1Response
	11, // [11:17] is the sub-list for method output_type
	5,  // [5:11] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_PuP_service_v1_pup_service_proto_init() }
func file_PuP_service_v1_pup_service_proto_init() {
	if File_PuP_service_v1_pup_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_PuP_service_v1_pup_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_PuP_service_v1_pup_service_proto_goTypes,
		DependencyIndexes: file_PuP_service_v1_pup_service_proto_depIdxs,
		EnumInfos:         file_PuP_service_v1_pup_service_proto_enumTypes,
		MessageInfos:      file_PuP_service_v1_pup_service_proto_msgTypes,
	}.Build()
	File_PuP_service_v1_pup_service_proto = out.File
	file_PuP_service_v1_pup_service_proto_rawDesc = nil
	file_PuP_service_v1_pup_service_proto_goTypes = nil
	file_PuP_service_v1_pup_service_proto_depIdxs = nil
}
